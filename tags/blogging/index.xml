<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogging on a blog with Hugo</title>
    
    
    
    <link>https://apostoloss.github.io/BitsThoughtsAndMore/tags/blogging/</link>
    <description>Recent content in Blogging on a blog with Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 18 Apr 2024 12:56:02 +0300</lastBuildDate>
    
	<atom:link href="https://apostoloss.github.io/BitsThoughtsAndMore/tags/blogging/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>adding a post by adding a file</title>
      <link>https://apostoloss.github.io/BitsThoughtsAndMore/posts/what-if/</link>
      <pubDate>Thu, 18 Apr 2024 12:56:02 +0300</pubDate>
      
      <guid>https://apostoloss.github.io/BitsThoughtsAndMore/posts/what-if/</guid>
      <description>
        
          
          
          
        
        
        
          So how about just create a new file in the correct file structure and not use the hugo new post? as it turns out it works exactly as expected&amp;hellip; So hugo just needs this footer.. and that is all!
Depending on theme you should be able to see this emoji rendered or not.. :smile:
          
        
        </description>
    </item>
    
    <item>
      <title>Blogging with Hugo</title>
      <link>https://apostoloss.github.io/BitsThoughtsAndMore/posts/blogging_with_hugo/</link>
      <pubDate>Thu, 18 Apr 2024 12:56:02 +0300</pubDate>
      
      <guid>https://apostoloss.github.io/BitsThoughtsAndMore/posts/blogging_with_hugo/</guid>
      <description>
        
          
          
          
        
        
        
          Following a guide from Ryan in youtube.. (https://www.youtube.com/watch?v=LIFvgrRxdt4)
What you need:
2 repos, one for the code of the site and one to deploy (we are going to use github pages) Those two repos will be joined using git submodule.
In the code repo do: git submodule add -b main &amp;lt;github pages repo&amp;gt; public Where the -b main is the branch of the repo, abd public is the folder that will be linked within the code repo and will point to that branch of the github pages repo.
          
        
        </description>
    </item>
    
  </channel>
</rss>